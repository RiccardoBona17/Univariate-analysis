%% ULTIMATE PREPROCESSING PIPELINE 
% reset the script
clear all
close all
clc

% Paths and directories
DATAPATH = 'D:\Main_arithmetic\localizer_analysis\Data'; 
FUNCTION_PATH = 'D:\Main_arithmetic\localizer_analysis\Functions';

% Adding necessary paths
addpath(DATAPATH)
addpath(FUNCTION_PATH)

% EXTRACTING SUBJECTS INFO
cd(DATAPATH)
subjects = dir('sub*');
sub_names = {subjects.("name")};

% Display the subjects we want to analyze
disp('SUBJECTS BEING PREPROCESSED:')
disp(' ')
disp(sub_names)

%% CREATING THE HOSTING FOLDERS

% Create 'tmp' directories to host preprocessed data and preprocessing derivatives
CREATE_tmp_directory(sub_names);

% Copy original NIFTI data to the 'tmp' folder (we do this to have a specific folder with all the data generated by the preprocessing steps)
COPY_preprocessing_files(sub_names);

%% PREPROCESSING
cd(FUNCTION_PATH)
PREPROCESS_allsubjects(sub_names);

% launching each subject's batch sequentially
for sub = sub_names

    % setting the right output directory
    cd(fullfile(DATAPATH,sub{:},'tmp'));

    batch_path = fullfile(DATAPATH,sub{:},'\batch_preproc.mat'); % path to the batch of each subject
    spm_jobman('run', batch_path);
end

%% 1st Level analysis
cd(FUNCTION_PATH)
% Creating 1st level directories if missing
CREATE_1stLevel_dir; 

% Checking for subjects' missing protocols
EXTRACT_model_info(sub_names);

% Creating 1stLevel batches
SPECIFY_model(sub_names); % Model specification

ESTIMATE_model(sub_names); % Model estimation

CONTRAST_model(sub_names); % Contrast generation

% Running the batches (one subject at a time)
for firstLevel_sub = sub_names

    % Model specification 
    cd(fullfile(DATAPATH,firstLevel_sub{:},'\1stLevel'));
    spm_jobman('run', 'SPECIFY_model_batch.mat') % spm_jobman takes just one cell at a time (except for model estimation that needs a different function)

    % Model estimation
    load('SPM.mat');
    spm_spm(SPM); % programs that uses the SPM.mat file (model) to estimate betas

    % Contrasts creation
    spm_jobman('run','CONTRAST_model_batch.mat');

end
disp('1st Level analysis - DONE')

%% 2nd Level Analysis
cd(DATAPATH) 
% Always process all the subjects together
sub_names = {subjects.name};
% Function that needs the number of subjects currently analysed
ANALYSIS_2ndlevel(sub_names);








